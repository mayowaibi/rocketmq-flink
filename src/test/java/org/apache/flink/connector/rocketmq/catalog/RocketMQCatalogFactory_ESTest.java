/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:16:20 GMT 2025
 */

package org.apache.flink.connector.rocketmq.catalog;

import org.apache.flink.configuration.ConfigOption;
import org.apache.flink.table.factories.CatalogFactory;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Map;
import java.util.Set;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class RocketMQCatalogFactory_ESTest extends RocketMQCatalogFactory_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        RocketMQCatalogFactory rocketMQCatalogFactory0 = new RocketMQCatalogFactory();
        CatalogFactory.Context catalogFactory_Context0 =
                mock(CatalogFactory.Context.class, new ViolatedAssumptionAnswer());
        doReturn((Map) null).when(catalogFactory_Context0).getOptions();
        // Undeclared exception!
        try {
            rocketMQCatalogFactory0.createCatalog(catalogFactory_Context0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.configuration.Configuration", e);
        }
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        RocketMQCatalogFactory rocketMQCatalogFactory0 = new RocketMQCatalogFactory();
        Set<ConfigOption<?>> set0 = rocketMQCatalogFactory0.requiredOptions();
        assertTrue(set0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        RocketMQCatalogFactory rocketMQCatalogFactory0 = new RocketMQCatalogFactory();
        String string0 = rocketMQCatalogFactory0.factoryIdentifier();
        assertEquals("rocketmq_catalog", string0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        RocketMQCatalogFactory rocketMQCatalogFactory0 = new RocketMQCatalogFactory();
        Set<ConfigOption<?>> set0 = rocketMQCatalogFactory0.optionalOptions();
        assertFalse(set0.isEmpty());
    }
}
