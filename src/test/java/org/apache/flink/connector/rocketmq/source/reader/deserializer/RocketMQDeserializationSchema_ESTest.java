/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:38:35 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.reader.deserializer;

import org.apache.flink.api.common.serialization.DeserializationSchema;
import org.apache.flink.connector.rocketmq.source.reader.MessageView;
import org.apache.flink.util.Collector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class RocketMQDeserializationSchema_ESTest
        extends RocketMQDeserializationSchema_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        DeserializationSchema<Object> deserializationSchema0 =
                (DeserializationSchema<Object>)
                        mock(DeserializationSchema.class, new ViolatedAssumptionAnswer());
        RocketMQDeserializationSchema<Object> rocketMQDeserializationSchema0 =
                RocketMQDeserializationSchema.rocketMQSchema(deserializationSchema0);
        assertNotNull(rocketMQDeserializationSchema0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        RocketMQSchemaWrapper<Object> rocketMQSchemaWrapper0 = new RocketMQSchemaWrapper<Object>();
        DeserializationSchema.InitializationContext deserializationSchema_InitializationContext0 =
                mock(
                        DeserializationSchema.InitializationContext.class,
                        new ViolatedAssumptionAnswer());
        rocketMQSchemaWrapper0.open(deserializationSchema_InitializationContext0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        RocketMQDeserializationSchema<Integer> rocketMQDeserializationSchema0 =
                RocketMQDeserializationSchema.flinkBodyOnlySchema(
                        (DeserializationSchema<Integer>) null);
        assertNotNull(rocketMQDeserializationSchema0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        DeserializationSchema<Integer> deserializationSchema0 =
                (DeserializationSchema<Integer>)
                        mock(DeserializationSchema.class, new ViolatedAssumptionAnswer());
        RocketMQDeserializationSchema<Integer> rocketMQDeserializationSchema0 =
                RocketMQDeserializationSchema.flinkSchema(deserializationSchema0);
        MessageView messageView0 = mock(MessageView.class, new ViolatedAssumptionAnswer());
        Collector<Integer> collector0 =
                (Collector<Integer>) mock(Collector.class, new ViolatedAssumptionAnswer());
        rocketMQDeserializationSchema0.deserialize(messageView0, collector0);
    }
}
