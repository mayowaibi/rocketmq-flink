/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 11:24:58 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.util;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.math.BigDecimal;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class ByteUtils_ESTest extends ByteUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-1);
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0, (int) (byte) 0, (int) (byte) 5);
        assertEquals((byte) 0, bigDecimal0.byteValue());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 8;
        boolean boolean0 = ByteUtils.toBoolean(byteArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        byte[] byteArray0 = new byte[4];
        float float0 = ByteUtils.toFloat(byteArray0, (int) (byte) 0);
        assertEquals(0.0F, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        byte[] byteArray0 = new byte[10];
        byteArray0[1] = (byte) 102;
        short short0 = ByteUtils.toShort(byteArray0, (int) (byte) 0);
        assertEquals((short) 102, short0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-123);
        short short0 = ByteUtils.toShort(byteArray0, (int) (byte) 0);
        assertEquals((short) (-31488), short0);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 120;
        short short0 = ByteUtils.toShort(byteArray0);
        assertEquals((short) 30720, short0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) (-1);
        short short0 = ByteUtils.toShort(byteArray0);
        assertEquals((short) (-256), short0);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        byte[] byteArray0 = new byte[10];
        byteArray0[1] = (byte) 102;
        long long0 = ByteUtils.toLong(byteArray0, (int) (byte) 0);
        assertEquals(28710447624486912L, long0);
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-1);
        long long0 = ByteUtils.toLong(byteArray0, (int) (byte) 0);
        assertEquals((-72057594037927936L), long0);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        byte[] byteArray0 = new byte[9];
        long long0 = ByteUtils.toLong(byteArray0);
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        byte[] byteArray0 = new byte[10];
        byteArray0[1] = (byte) 102;
        long long0 = ByteUtils.toLong(byteArray0);
        assertEquals(28710447624486912L, long0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-108);
        long long0 = ByteUtils.toLong(byteArray0);
        assertEquals((-7782220156096217088L), long0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[1] = (byte) 4;
        int int0 = ByteUtils.toInt(byteArray0, (int) (byte) 0);
        assertEquals(262144, int0);
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) (-1);
        int int0 = ByteUtils.toInt(byteArray0, (int) (byte) 0);
        assertEquals((-16777216), int0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[2] = (byte) (-1);
        int int0 = ByteUtils.toInt(byteArray0);
        assertEquals(65280, int0);
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) (-1);
        int int0 = ByteUtils.toInt(byteArray0);
        assertEquals((-16777216), int0);
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        byte[] byteArray0 = new byte[10];
        byteArray0[1] = (byte) 102;
        float float0 = ByteUtils.toFloat(byteArray0, (int) (byte) 0);
        assertEquals(9.36722E-39F, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-32);
        float float0 = ByteUtils.toFloat(byteArray0, (int) (byte) 0);
        assertEquals((-3.6893488E19F), float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        byte[] byteArray0 = new byte[10];
        byteArray0[1] = (byte) 102;
        float float0 = ByteUtils.toFloat(byteArray0);
        assertEquals(9.36722E-39F, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-56);
        float float0 = ByteUtils.toFloat(byteArray0);
        assertEquals((-131072.0F), float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[1] = (byte) (-77);
        double double0 = ByteUtils.toDouble(byteArray0, 0);
        assertEquals(2.705689811944757E-305, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-111);
        double double0 = ByteUtils.toDouble(byteArray0, 0);
        assertEquals((-8.442542515286355E-227), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[1] = (byte) 4;
        double double0 = ByteUtils.toDouble(byteArray0);
        assertEquals(5.562684646268003E-309, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-56);
        double double0 = ByteUtils.toDouble(byteArray0);
        assertEquals((-6.805647338418769E38), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-22);
        boolean boolean0 = ByteUtils.toBoolean(byteArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test25() throws Throwable {
        byte[] byteArray0 = new byte[2];
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0);
        assertNull(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test26() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[7] = (byte) (-21);
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0);
        assertNotNull(bigDecimal0);
        assertEquals((short) (-5376), bigDecimal0.shortValue());
    }

    @Test(timeout = 4000)
    public void test27() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[8] = (byte) 16;
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0);
        assertNotNull(bigDecimal0);
        assertEquals((byte) 16, bigDecimal0.byteValue());
    }

    @Test(timeout = 4000)
    public void test28() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[8] = (byte) (-51);
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0);
        assertNotNull(bigDecimal0);
        assertEquals((byte) (-51), bigDecimal0.byteValue());
    }

    @Test(timeout = 4000)
    public void test29() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toShort((byte[]) null, (-1977));
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test30() throws Throwable {
        byte[] byteArray0 = new byte[1];
        // Undeclared exception!
        try {
            ByteUtils.toShort(byteArray0, (int) (byte) (-22));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -22
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test31() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toShort((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test32() throws Throwable {
        byte[] byteArray0 = new byte[1];
        // Undeclared exception!
        try {
            ByteUtils.toShort(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (2) exceed the capacity of the array: 1
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toLong((byte[]) null, 1012);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        byte[] byteArray0 = new byte[7];
        // Undeclared exception!
        try {
            ByteUtils.toLong(byteArray0, (int) (byte) (-1));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -1
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test35() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toLong((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test36() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toInt((byte[]) null, 3343);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test37() throws Throwable {
        byte[] byteArray0 = new byte[4];
        // Undeclared exception!
        try {
            ByteUtils.toInt(byteArray0, (-972));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test38() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toInt((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test39() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toFloat((byte[]) null, 8);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test40() throws Throwable {
        byte[] byteArray0 = new byte[10];
        // Undeclared exception!
        try {
            ByteUtils.toFloat(byteArray0, (int) (byte) 102);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (102) + length (4) exceed the capacity of the array: 10
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test41() throws Throwable {
        byte[] byteArray0 = new byte[2];
        // Undeclared exception!
        try {
            ByteUtils.toFloat(byteArray0, (int) (byte) (-56));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -56
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test42() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toFloat((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test43() throws Throwable {
        byte[] byteArray0 = new byte[0];
        // Undeclared exception!
        try {
            ByteUtils.toFloat(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (4) exceed the capacity of the array: 0
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toDouble((byte[]) null, 0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        byte[] byteArray0 = new byte[2];
        // Undeclared exception!
        try {
            ByteUtils.toDouble(byteArray0, 141);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (141) + length (8) exceed the capacity of the array: 2
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test46() throws Throwable {
        byte[] byteArray0 = new byte[4];
        // Undeclared exception!
        try {
            ByteUtils.toDouble(byteArray0, (-1061));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -1061
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test47() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toDouble((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test48() throws Throwable {
        byte[] byteArray0 = new byte[0];
        // Undeclared exception!
        try {
            ByteUtils.toDouble(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (8) exceed the capacity of the array: 0
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test49() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toBoolean((byte[]) null, 0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test50() throws Throwable {
        byte[] byteArray0 = new byte[18];
        // Undeclared exception!
        try {
            ByteUtils.toBoolean(byteArray0, (-1615));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -1615
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test51() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toBoolean((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test52() throws Throwable {
        byte[] byteArray0 = new byte[0];
        // Undeclared exception!
        try {
            ByteUtils.toBoolean(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (1) exceed the capacity of the array: 0
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test53() throws Throwable {
        byte[] byteArray0 = new byte[5];
        // Undeclared exception!
        try {
            ByteUtils.toBigDecimal(byteArray0, (-916), (int) (byte) 8);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -916
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test54() throws Throwable {
        // Undeclared exception!
        try {
            ByteUtils.toBigDecimal((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        byte[] byteArray0 = new byte[10];
        short short0 = ByteUtils.toShort(byteArray0, (int) (byte) 0);
        assertEquals((short) 0, short0);
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        byte[] byteArray0 = new byte[11];
        long long0 = ByteUtils.toLong(byteArray0, (int) (byte) 0);
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test57() throws Throwable {
        byte[] byteArray0 = new byte[0];
        // Undeclared exception!
        try {
            ByteUtils.toLong(byteArray0, 1);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (1) + length (8) exceed the capacity of the array: 0
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test58() throws Throwable {
        byte[] byteArray0 = new byte[11];
        boolean boolean0 = ByteUtils.toBoolean(byteArray0, (int) (byte) 0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test59() throws Throwable {
        byte[] byteArray0 = new byte[11];
        int int0 = ByteUtils.toInt(byteArray0, 0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test60() throws Throwable {
        byte[] byteArray0 = new byte[0];
        // Undeclared exception!
        try {
            ByteUtils.toInt(byteArray0, 3394);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (3394) + length (4) exceed the capacity of the array: 0
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test61() throws Throwable {
        byte[] byteArray0 = new byte[9];
        double double0 = ByteUtils.toDouble(byteArray0, (int) (byte) 0);
        assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test62() throws Throwable {
        byte[] byteArray0 = new byte[9];
        BigDecimal bigDecimal0 =
                ByteUtils.toBigDecimal(byteArray0, (int) (byte) 0, (int) (byte) 98);
        assertNull(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test63() throws Throwable {
        byte[] byteArray0 = new byte[9];
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0, 0, (-4149));
        assertNull(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test64() throws Throwable {
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal((byte[]) null, 1171, 1171);
        assertNull(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test65() throws Throwable {
        byte[] byteArray0 = new byte[9];
        // Undeclared exception!
        try {
            ByteUtils.toShort(byteArray0, (int) (byte) 17);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (17) + length (2) exceed the capacity of the array: 9
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[8] = (byte) (-51);
        boolean boolean0 = ByteUtils.toBoolean(byteArray0, 8);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test67() throws Throwable {
        byte[] byteArray0 = new byte[9];
        // Undeclared exception!
        try {
            ByteUtils.toBoolean(byteArray0, (int) (byte) 109);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (109) + length (1) exceed the capacity of the array: 9
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test68() throws Throwable {
        byte[] byteArray0 = new byte[2];
        // Undeclared exception!
        try {
            ByteUtils.toInt(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (4) exceed the capacity of the array: 2
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test69() throws Throwable {
        byte[] byteArray0 = new byte[9];
        float float0 = ByteUtils.toFloat(byteArray0);
        assertEquals(0.0F, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test70() throws Throwable {
        byte[] byteArray0 = new byte[9];
        int int0 = ByteUtils.toInt(byteArray0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test71() throws Throwable {
        byte[] byteArray0 = new byte[9];
        BigDecimal bigDecimal0 = ByteUtils.toBigDecimal(byteArray0);
        assertEquals((short) 0, bigDecimal0.shortValue());
    }

    @Test(timeout = 4000)
    public void test72() throws Throwable {
        byte[] byteArray0 = new byte[2];
        short short0 = ByteUtils.toShort(byteArray0);
        assertEquals((short) 0, short0);
    }

    @Test(timeout = 4000)
    public void test73() throws Throwable {
        ByteUtils byteUtils0 = new ByteUtils();
    }

    @Test(timeout = 4000)
    public void test74() throws Throwable {
        byte[] byteArray0 = new byte[4];
        boolean boolean0 = ByteUtils.toBoolean(byteArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test75() throws Throwable {
        byte[] byteArray0 = new byte[9];
        double double0 = ByteUtils.toDouble(byteArray0);
        assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test76() throws Throwable {
        byte[] byteArray0 = new byte[3];
        // Undeclared exception!
        try {
            ByteUtils.toLong(byteArray0);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // offset (0) + length (8) exceed the capacity of the array: 3
            //
            verifyException("org.apache.flink.connector.rocketmq.source.util.ByteUtils", e);
        }
    }
}
