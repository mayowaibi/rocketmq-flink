/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:06:52 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.reader;

import org.apache.rocketmq.common.message.MessageExt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Map;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class MessageViewExt_ESTest extends MessageViewExt_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        byte[] byteArray0 = new byte[8];
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn(byteArray0).when(messageExt0).getBody();
        doReturn("KEYS", "").when(messageExt0).getKeys();
        doReturn((Map<String, String>) null).when(messageExt0).getProperties();
        doReturn("KEYS").when(messageExt0).getTags();
        doReturn("KEYS").when(messageExt0).getTopic();
        doReturn((long) (byte) 0).when(messageExt0).getBornTimestamp();
        doReturn("").when(messageExt0).getBrokerName();
        doReturn("").when(messageExt0).getMsgId();
        doReturn((int) (byte) 0).when(messageExt0).getQueueId();
        doReturn((long) (byte) 0).when(messageExt0).getQueueOffset();
        doReturn((-1828)).when(messageExt0).getReconsumeTimes();
        doReturn((int) (byte) (-1)).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        int int0 = messageViewExt0.getStoreSize();
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        byte[] byteArray0 = new byte[0];
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        messageViewExt0.getProperties();
        MessageExt messageExt1 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("Nkx&]aqextOo~oGm ", (String) null).when(messageExt1).getKeys();
        doReturn("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt")
                .when(messageExt1)
                .getTags();
        doReturn("L&9k0cwBZ:A{XbB").when(messageExt1).getTopic();
        doReturn("ZdS@* XwtqfG").when(messageExt1).getBrokerName();
        doReturn("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt")
                .when(messageExt1)
                .getMsgId();
        doReturn((-1828)).when(messageExt1).getQueueId();
        doReturn(1429L).when(messageExt1).getQueueOffset();
        doReturn(0).when(messageExt1).getStoreSize();
        MessageViewExt messageViewExt1 = null;
        try {
            messageViewExt1 = new MessageViewExt(messageExt1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        byte[] byteArray0 = new byte[8];
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn(byteArray0).when(messageExt0).getBody();
        doReturn("KEYS", "").when(messageExt0).getKeys();
        doReturn((Map<String, String>) null).when(messageExt0).getProperties();
        doReturn("KEYS").when(messageExt0).getTags();
        doReturn("KEYS").when(messageExt0).getTopic();
        doReturn((long) (byte) 0).when(messageExt0).getBornTimestamp();
        doReturn("").when(messageExt0).getBrokerName();
        doReturn("").when(messageExt0).getMsgId();
        doReturn((int) (byte) 0).when(messageExt0).getQueueId();
        doReturn((long) (byte) 0).when(messageExt0).getQueueOffset();
        doReturn((-1828)).when(messageExt0).getReconsumeTimes();
        doReturn((int) (byte) (-1)).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        String string0 = messageViewExt0.getMessageId();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        System.setCurrentTimeMillis(0L);
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        long long0 = messageViewExt0.getIngestionTime();
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        System.setCurrentTimeMillis((-3812L));
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        long long0 = messageViewExt0.getIngestionTime();
        assertEquals((-3812L), long0);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 70;
        byteArray0[1] = (byte) 1;
        byteArray0[2] = (byte) 0;
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("x?jrx:+<1\"WUlS(", (String) null).when(messageExt0).getKeys();
        doReturn("").when(messageExt0).getTags();
        doReturn("8^$E=@?").when(messageExt0).getTopic();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn("~HQ_aE").when(messageExt0).getMsgId();
        doReturn(512).when(messageExt0).getQueueId();
        doReturn((long) 512).when(messageExt0).getQueueOffset();
        doReturn(1530).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = null;
        try {
            messageViewExt0 = new MessageViewExt(messageExt0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-29);
        byteArray0[1] = (byte) 0;
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        messageViewExt0.getProperties();
        MessageExt messageExt1 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("", (String) null).when(messageExt1).getKeys();
        doReturn("").when(messageExt1).getTags();
        doReturn("").when(messageExt1).getTopic();
        doReturn("INSTANCE_ID").when(messageExt1).getBrokerName();
        doReturn("").when(messageExt1).getMsgId();
        doReturn((int) (byte) 0).when(messageExt1).getQueueId();
        doReturn((-537L)).when(messageExt1).getQueueOffset();
        doReturn(2584).when(messageExt1).getStoreSize();
        MessageViewExt messageViewExt1 = null;
        try {
            messageViewExt1 = new MessageViewExt(messageExt1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-29);
        byteArray0[1] = (byte) 0;
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        messageViewExt0.getProperties();
        MessageExt messageExt1 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("", (String) null).when(messageExt1).getKeys();
        doReturn("").when(messageExt1).getTags();
        doReturn("").when(messageExt1).getTopic();
        doReturn("INSTANCE_ID").when(messageExt1).getBrokerName();
        doReturn("").when(messageExt1).getMsgId();
        doReturn((int) (byte) 0).when(messageExt1).getQueueId();
        doReturn((-537L)).when(messageExt1).getQueueOffset();
        doReturn(2584).when(messageExt1).getStoreSize();
        MessageViewExt messageViewExt1 = null;
        try {
            messageViewExt1 = new MessageViewExt(messageExt1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        byte[] byteArray0 = new byte[0];
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        messageViewExt0.getProperties();
        MessageExt messageExt1 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("", (String) null).when(messageExt1).getKeys();
        doReturn("SINGLE_TAG").when(messageExt1).getTags();
        doReturn("WN.{8wkT").when(messageExt1).getTopic();
        doReturn("").when(messageExt1).getBrokerName();
        doReturn("").when(messageExt1).getMsgId();
        doReturn(3840).when(messageExt1).getQueueId();
        doReturn(552L).when(messageExt1).getQueueOffset();
        doReturn(3840).when(messageExt1).getStoreSize();
        MessageViewExt messageViewExt1 = null;
        try {
            messageViewExt1 = new MessageViewExt(messageExt1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        byte[] byteArray0 = new byte[8];
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn(byteArray0).when(messageExt0).getBody();
        doReturn("KEYS", "").when(messageExt0).getKeys();
        doReturn((Map<String, String>) null).when(messageExt0).getProperties();
        doReturn("KEYS").when(messageExt0).getTags();
        doReturn("KEYS").when(messageExt0).getTopic();
        doReturn((long) (byte) 0).when(messageExt0).getBornTimestamp();
        doReturn("").when(messageExt0).getBrokerName();
        doReturn("").when(messageExt0).getMsgId();
        doReturn((int) (byte) 0).when(messageExt0).getQueueId();
        doReturn((long) (byte) 0).when(messageExt0).getQueueOffset();
        doReturn((-1828)).when(messageExt0).getReconsumeTimes();
        doReturn((int) (byte) (-1)).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        byte[] byteArray1 = messageViewExt0.getBody();
        assertSame(byteArray1, byteArray0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        messageViewExt0.getProperties();
        MessageExt messageExt1 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn("", (String) null).when(messageExt1).getKeys();
        doReturn("").when(messageExt1).getTags();
        doReturn("").when(messageExt1).getTopic();
        doReturn(", queueOffset=").when(messageExt1).getBrokerName();
        doReturn("T=+").when(messageExt1).getMsgId();
        doReturn((-1088)).when(messageExt1).getQueueId();
        doReturn((-1L)).when(messageExt1).getQueueOffset();
        doReturn((-1088)).when(messageExt1).getStoreSize();
        MessageViewExt messageViewExt1 = null;
        try {
            messageViewExt1 = new MessageViewExt(messageExt1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.source.reader.MessageViewExt", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        String string0 = messageViewExt0.getTag();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        int int0 = messageViewExt0.getStoreSize();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        long long0 = messageViewExt0.getEventTime();
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        String string0 = messageViewExt0.getBrokerName();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        String string0 = messageViewExt0.getMessageId();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        long long0 = messageViewExt0.getQueueOffset();
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        int int0 = messageViewExt0.getQueueId();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        MessageExt messageExt0 = mock(MessageExt.class, new ViolatedAssumptionAnswer());
        doReturn((byte[]) null).when(messageExt0).getBody();
        doReturn((String) null).when(messageExt0).getKeys();
        doReturn((Map) null).when(messageExt0).getProperties();
        doReturn((String) null).when(messageExt0).getTags();
        doReturn((String) null).when(messageExt0).getTopic();
        doReturn(0L).when(messageExt0).getBornTimestamp();
        doReturn((String) null).when(messageExt0).getBrokerName();
        doReturn((String) null).when(messageExt0).getMsgId();
        doReturn(0).when(messageExt0).getQueueId();
        doReturn(0L).when(messageExt0).getQueueOffset();
        doReturn(0).when(messageExt0).getReconsumeTimes();
        doReturn(0).when(messageExt0).getStoreSize();
        MessageViewExt messageViewExt0 = new MessageViewExt(messageExt0);
        String string0 = messageViewExt0.getTopic();
        assertNull(string0);
    }
}
