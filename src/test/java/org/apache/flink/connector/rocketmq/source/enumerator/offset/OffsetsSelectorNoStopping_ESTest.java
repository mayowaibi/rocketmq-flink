/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:20:20 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.enumerator.offset;

import org.apache.rocketmq.common.message.MessageQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Collection;
import java.util.Map;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class OffsetsSelectorNoStopping_ESTest extends OffsetsSelectorNoStopping_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        OffsetsSelectorNoStopping offsetsSelectorNoStopping0 = new OffsetsSelectorNoStopping();
        Map<MessageQueue, Long> map0 =
                offsetsSelectorNoStopping0.getMessageQueueOffsets(
                        (Collection<MessageQueue>) null,
                        (OffsetsSelector.MessageQueueOffsetsRetriever) null);
        assertEquals(0, map0.size());
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        OffsetsSelectorNoStopping offsetsSelectorNoStopping0 = new OffsetsSelectorNoStopping();
        // Undeclared exception!
        try {
            offsetsSelectorNoStopping0.getAutoOffsetResetStrategy();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // The OffsetsSelectorNoStopping does not have an OffsetResetStrategy. It should only be
            // used to end offset.
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.source.enumerator.offset.OffsetsSelectorNoStopping",
                    e);
        }
    }
}
