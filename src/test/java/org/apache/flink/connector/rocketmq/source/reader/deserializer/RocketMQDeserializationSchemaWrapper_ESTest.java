/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:24:04 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.reader.deserializer;

import org.apache.flink.api.common.serialization.DeserializationSchema;
import org.apache.flink.api.common.typeinfo.TypeInformation;
import org.apache.flink.connector.rocketmq.source.reader.MessageView;
import org.apache.flink.util.Collector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class RocketMQDeserializationSchemaWrapper_ESTest
        extends RocketMQDeserializationSchemaWrapper_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        TypeInformation<Object> typeInformation0 =
                (TypeInformation<Object>)
                        mock(TypeInformation.class, new ViolatedAssumptionAnswer());
        doReturn((String) null).when(typeInformation0).toString();
        DeserializationSchema<Object> deserializationSchema0 =
                (DeserializationSchema<Object>)
                        mock(DeserializationSchema.class, new ViolatedAssumptionAnswer());
        doReturn(typeInformation0, (TypeInformation) null)
                .when(deserializationSchema0)
                .getProducedType();
        RocketMQDeserializationSchemaWrapper<Object> rocketMQDeserializationSchemaWrapper0 =
                new RocketMQDeserializationSchemaWrapper<Object>(deserializationSchema0);
        rocketMQDeserializationSchemaWrapper0.getProducedType();
        TypeInformation<Object> typeInformation1 =
                rocketMQDeserializationSchemaWrapper0.getProducedType();
        assertNull(typeInformation1);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        DeserializationSchema<Object> deserializationSchema0 =
                (DeserializationSchema<Object>)
                        mock(DeserializationSchema.class, new ViolatedAssumptionAnswer());
        RocketMQDeserializationSchemaWrapper<Object> rocketMQDeserializationSchemaWrapper0 =
                new RocketMQDeserializationSchemaWrapper<Object>(deserializationSchema0);
        rocketMQDeserializationSchemaWrapper0.open(
                (DeserializationSchema.InitializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        DeserializationSchema<Object> deserializationSchema0 =
                (DeserializationSchema<Object>)
                        mock(DeserializationSchema.class, new ViolatedAssumptionAnswer());
        RocketMQDeserializationSchemaWrapper<Object> rocketMQDeserializationSchemaWrapper0 =
                new RocketMQDeserializationSchemaWrapper<Object>(deserializationSchema0);
        MessageView messageView0 = mock(MessageView.class, new ViolatedAssumptionAnswer());
        Collector<Object> collector0 =
                (Collector<Object>) mock(Collector.class, new ViolatedAssumptionAnswer());
        rocketMQDeserializationSchemaWrapper0.deserialize(messageView0, collector0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        RocketMQDeserializationSchemaWrapper<String> rocketMQDeserializationSchemaWrapper0 =
                new RocketMQDeserializationSchemaWrapper<String>(
                        (DeserializationSchema<String>) null);
        // Undeclared exception!
        try {
            rocketMQDeserializationSchemaWrapper0.getProducedType();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.source.reader.deserializer.RocketMQDeserializationSchemaWrapper",
                    e);
        }
    }
}
