/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:17:21 GMT 2025
 */

package org.apache.flink.connector.rocketmq.legacy.common.util;

import org.apache.flink.api.common.functions.RuntimeContext;
import org.apache.flink.metrics.Counter;
import org.apache.flink.metrics.Gauge;
import org.apache.flink.metrics.MetricGroup;
import org.apache.flink.metrics.groups.OperatorMetricGroup;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class MetricUtils_ESTest extends MetricUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        MetricUtils.LatencyGauge metricUtils_LatencyGauge0 = new MetricUtils.LatencyGauge();
        metricUtils_LatencyGauge0.report((-2871L), (-1947L));
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        MetricGroup metricGroup0 = mock(MetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn((Counter) null)
                .when(metricGroup0)
                .counter(anyString(), nullable(java.lang.Object.class));
        OperatorMetricGroup operatorMetricGroup0 =
                mock(OperatorMetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(metricGroup0).when(operatorMetricGroup0).addGroup(anyString());
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn(operatorMetricGroup0, (OperatorMetricGroup) null)
                .when(runtimeContext0)
                .getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerSinkInTps(runtimeContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        MetricGroup metricGroup0 = mock(MetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn((Counter) null)
                .when(metricGroup0)
                .counter(anyString(), nullable(java.lang.Object.class));
        OperatorMetricGroup operatorMetricGroup0 =
                mock(OperatorMetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(metricGroup0).when(operatorMetricGroup0).addGroup(anyString());
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn(operatorMetricGroup0, (OperatorMetricGroup) null)
                .when(runtimeContext0)
                .getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerOutTps(runtimeContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        MetricGroup metricGroup0 = mock(MetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn((Gauge) null)
                .when(metricGroup0)
                .gauge(anyString(), nullable(java.lang.Object.class));
        OperatorMetricGroup operatorMetricGroup0 =
                mock(OperatorMetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(metricGroup0).when(operatorMetricGroup0).addGroup(anyString());
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn(operatorMetricGroup0).when(runtimeContext0).getMetricGroup();
        MetricUtils.registerOutLatency(runtimeContext0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn((OperatorMetricGroup) null).when(runtimeContext0).getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerOutLatency(runtimeContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        MetricUtils.LatencyGauge metricUtils_LatencyGauge0 = new MetricUtils.LatencyGauge();
        metricUtils_LatencyGauge0.report(0L, 1480L);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        MetricUtils.LatencyGauge metricUtils_LatencyGauge0 = new MetricUtils.LatencyGauge();
        metricUtils_LatencyGauge0.report(0L, 0L);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn((OperatorMetricGroup) null).when(runtimeContext0).getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerOutBps(runtimeContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        Gauge<String> gauge0 = (Gauge<String>) mock(Gauge.class, new ViolatedAssumptionAnswer());
        MetricGroup metricGroup0 = mock(MetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(gauge0).when(metricGroup0).gauge(anyString(), nullable(java.lang.Object.class));
        OperatorMetricGroup operatorMetricGroup0 =
                mock(OperatorMetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(metricGroup0).when(operatorMetricGroup0).addGroup(anyString());
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn(operatorMetricGroup0).when(runtimeContext0).getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerOutLatency(runtimeContext0);
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // org.apache.flink.metrics.Gauge$MockitoMock$1834329156 cannot be cast to
            // org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils$LatencyGauge
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        MetricUtils.TimestampGauge metricUtils_TimestampGauge0 = new MetricUtils.TimestampGauge();
        metricUtils_TimestampGauge0.getValue();
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        MetricUtils.TimestampGauge metricUtils_TimestampGauge0 = new MetricUtils.TimestampGauge();
        metricUtils_TimestampGauge0.report((-1L));
        metricUtils_TimestampGauge0.report((-2121L));
        metricUtils_TimestampGauge0.report(1359L);
        metricUtils_TimestampGauge0.report((-1L));
        metricUtils_TimestampGauge0.report((-1L));
        metricUtils_TimestampGauge0.getValue();
        MetricGroup metricGroup0 = mock(MetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn((Counter) null)
                .when(metricGroup0)
                .counter(anyString(), nullable(java.lang.Object.class));
        OperatorMetricGroup operatorMetricGroup0 =
                mock(OperatorMetricGroup.class, new ViolatedAssumptionAnswer());
        doReturn(metricGroup0).when(operatorMetricGroup0).addGroup(anyString());
        RuntimeContext runtimeContext0 = mock(RuntimeContext.class, new ViolatedAssumptionAnswer());
        doReturn(operatorMetricGroup0, (OperatorMetricGroup) null)
                .when(runtimeContext0)
                .getMetricGroup();
        // Undeclared exception!
        try {
            MetricUtils.registerOutBps(runtimeContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.legacy.common.util.MetricUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        MetricUtils.LatencyGauge metricUtils_LatencyGauge0 = new MetricUtils.LatencyGauge();
        metricUtils_LatencyGauge0.getValue();
    }
}
