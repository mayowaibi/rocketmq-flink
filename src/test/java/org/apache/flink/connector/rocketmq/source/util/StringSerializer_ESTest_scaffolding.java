/**
 * Scaffolding file used to store all the setups needed to run tests automatically generated by
 * EvoSuite Wed Mar 26 10:45:46 GMT 2025
 */
package org.apache.flink.connector.rocketmq.source.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@EvoSuiteClassExclude
public class StringSerializer_ESTest_scaffolding {

    @org.junit.Rule
    public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr =
            new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

    private static final java.util.Properties defaultProperties =
            (java.util.Properties) java.lang.System.getProperties().clone();

    private org.evosuite.runtime.thread.ThreadStopper threadStopper =
            new org.evosuite.runtime.thread.ThreadStopper(
                    org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);

    @BeforeClass
    public static void initEvoSuiteFramework() {
        org.evosuite.runtime.RuntimeSettings.className =
                "org.apache.flink.connector.rocketmq.source.util.StringSerializer";
        org.evosuite.runtime.GuiSupport.initialize();
        org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100;
        org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
        org.evosuite.runtime.RuntimeSettings.mockSystemIn = true;
        org.evosuite.runtime.RuntimeSettings.sandboxMode =
                org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
        org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
        org.evosuite.runtime.classhandling.JDKClassResetter.init();
        setSystemProperties();
        initializeClasses();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
    }

    @AfterClass
    public static void clearEvoSuiteFramework() {
        Sandbox.resetDefaultSecurityManager();
        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
    }

    @Before
    public void initTestCase() {
        threadStopper.storeCurrentThreads();
        threadStopper.startRecordingTime();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
        org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
        setSystemProperties();
        org.evosuite.runtime.GuiSupport.setHeadless();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
        org.evosuite.runtime.agent.InstrumentingAgent.activate();
    }

    @After
    public void doneWithTestCase() {
        threadStopper.killAndJoinClientThreads();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
        org.evosuite.runtime.classhandling.JDKClassResetter.reset();
        resetClasses();
        org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
        org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
        org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
    }

    public static void setSystemProperties() {

        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
        java.lang.System.setProperty("file.encoding", "UTF-8");
        java.lang.System.setProperty("java.awt.headless", "true");
        java.lang.System.setProperty(
                "java.io.tmpdir", "/var/folders/t3/x2jshcps4n99vnsnf_qb26qm0000gn/T/");
        java.lang.System.setProperty("user.country", "GB");
        java.lang.System.setProperty("user.dir", "/Users/isaac/IdeaProjects/rocketmq-flink");
        java.lang.System.setProperty("user.home", "/Users/isaac");
        java.lang.System.setProperty("user.language", "en");
        java.lang.System.setProperty("user.name", "isaac");
        java.lang.System.setProperty("user.timezone", "America/Toronto");
    }

    private static void initializeClasses() {
        org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(
                StringSerializer_ESTest_scaffolding.class.getClassLoader(),
                "org.apache.flink.types.ByteValue",
                "com.google.common.math.LongMath$1",
                "com.google.common.hash.Striped64$1",
                "com.esotericsoftware.kryo.util.IdentityMap$Values",
                "org.apache.flink.api.common.ExecutionMode",
                "org.apache.flink.api.common.typeinfo.TypeHint",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields",
                "com.esotericsoftware.kryo.util.DefaultStreamFactory",
                "org.apache.flink.core.memory.DataOutputViewStreamWrapper",
                "com.google.common.hash.BloomFilter$Strategy",
                "org.apache.flink.util.WrappingRuntimeException",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeSetSerializer",
                "org.apache.flink.api.common.typeutils.base.CharValueComparator",
                "org.apache.flink.api.java.typeutils.runtime.EitherSerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveLongArrayConverter",
                "org.apache.flink.api.common.typeutils.base.DateComparator",
                "org.apache.flink.api.common.typeutils.base.ByteValueComparator",
                "org.apache.flink.table.data.util.DataFormatConverters$AbstractRowDataConverter",
                "com.google.common.collect.NullsLastOrdering",
                "org.apache.flink.api.common.typeutils.base.LongValueSerializer",
                "org.apache.flink.core.memory.MemoryUtils",
                "org.apache.flink.table.data.MapData",
                "org.apache.flink.api.common.typeutils.base.array.StringArraySerializer",
                "com.esotericsoftware.kryo.util.IntMap$Values",
                "org.apache.flink.table.runtime.typeutils.PagedTypeSerializer",
                "org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer",
                "org.apache.flink.core.io.IOReadableWritable",
                "org.apache.flink.metrics.MetricGroup",
                "com.esotericsoftware.kryo.util.Util",
                "org.apache.flink.table.data.util.DataFormatConverters$IntConverter",
                "org.apache.flink.configuration.description.BlockElement",
                "org.apache.flink.types.Row",
                "org.apache.flink.api.common.time.Time",
                "com.esotericsoftware.kryo.util.ObjectMap$MapIterator",
                "org.apache.flink.util.FlinkException",
                "org.apache.flink.api.common.typeutils.base.DoubleComparator",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer",
                "org.apache.flink.table.types.KeyValueDataType",
                "org.apache.flink.table.catalog.ObjectIdentifier",
                "com.google.common.collect.NullsFirstOrdering",
                "org.apache.flink.util.LinkedOptionalMap$MergeResult",
                "org.apache.flink.types.Either",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyListSerializer",
                "com.esotericsoftware.kryo.util.IdentityMap$Keys",
                "org.apache.flink.api.common.typeutils.base.ShortSerializer",
                "org.apache.flink.api.common.typeutils.base.LocalTimeComparator",
                "org.apache.flink.table.types.logical.TimestampType",
                "com.google.common.base.Strings",
                "org.apache.flink.api.common.typeutils.base.EnumComparator",
                "org.apache.flink.api.common.typeutils.base.LongComparator",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$Extractor",
                "com.google.common.collect.DiscreteDomain",
                "org.apache.flink.api.common.typeutils.base.BigIntComparator",
                "com.twitter.chill.java.BitSetSerializer",
                "org.apache.flink.metrics.Gauge",
                "org.apache.flink.table.functions.FunctionKind",
                "com.google.common.collect.Cut",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$TimeZoneSerializer",
                "org.apache.flink.table.types.logical.YearMonthIntervalType$YearMonthResolution",
                "org.apache.flink.util.FlinkRuntimeException",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeRegionField",
                "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility",
                "org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializer",
                "org.apache.flink.table.api.TableException",
                "org.apache.flink.table.types.logical.ArrayType",
                "org.apache.flink.table.data.columnar.ColumnarArrayData",
                "org.apache.flink.table.data.util.DataFormatConverters$RowDataConverter",
                "com.google.common.base.ElementTypesAreNonnullByDefault",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FieldNamesExtractor",
                "org.apache.flink.table.types.inference.CallContext",
                "org.apache.flink.configuration.description.Formatter",
                "org.apache.flink.configuration.ConfigurationUtils",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCharField",
                "org.apache.flink.table.api.DataTypes$AbstractField",
                "org.apache.flink.api.common.typeutils.base.IntValueSerializer",
                "org.apache.flink.table.data.binary.StringUtf8Utils",
                "org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel",
                "com.google.common.hash.LongAddables$1",
                "org.apache.flink.util.LinkedOptionalMap$ConsumerWithException",
                "com.esotericsoftware.kryo.StreamFactory",
                "com.google.common.base.Converter$ConverterComposition",
                "org.apache.flink.api.common.typeutils.base.array.ShortPrimitiveArraySerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$DataFormatConverter",
                "org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo",
                "org.apache.flink.api.common.typeutils.base.FloatComparator",
                "org.apache.flink.api.java.typeutils.TupleTypeInfo",
                "com.google.common.collect.ImmutableCollection",
                "org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArrayComparator",
                "org.apache.flink.table.data.util.DataFormatConverters$TimestampDataConverter",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCachedField",
                "com.google.common.hash.BloomFilterStrategies",
                "org.apache.flink.table.expressions.ResolvedExpression",
                "org.apache.flink.table.data.util.DataFormatConverters$ByteConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CalendarSerializer",
                "com.google.common.collect.ImmutableCollection$Builder",
                "org.apache.flink.api.java.typeutils.runtime.ValueSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer",
                "org.apache.flink.api.java.typeutils.EitherTypeInfoFactory",
                "com.google.common.collect.DiscreteDomain$IntegerDomain",
                "org.apache.flink.api.common.typeutils.base.FloatValueSerializer",
                "org.apache.flink.util.StringUtils",
                "org.apache.flink.api.common.typeutils.base.ByteComparator",
                "com.esotericsoftware.kryo.util.ObjectMap$Entries",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$PrecisionExtractor",
                "com.esotericsoftware.kryo.factories.ReflectionSerializerFactory",
                "com.google.common.collect.DiscreteDomain$LongDomain",
                "com.google.common.base.Converter$ReverseConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer",
                "org.apache.flink.api.common.ExecutionConfig",
                "org.apache.flink.table.functions.FunctionIdentifier",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonSetSerializer",
                "org.apache.flink.types.Key",
                "org.apache.flink.table.data.util.DataFormatConverters$TupleConverter",
                "org.apache.flink.table.catalog.Column$MetadataColumn",
                "org.apache.flink.table.catalog.DataTypeFactory",
                "org.apache.flink.table.types.logical.BinaryType",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$BigDecimalSerializer",
                "org.apache.flink.table.functions.SpecializedFunction",
                "org.apache.flink.table.utils.EncodingUtils",
                "org.apache.flink.table.types.inference.InputTypeStrategy",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveIntArrayConverter",
                "org.apache.flink.table.data.util.DataFormatConverters$LocalDateTimeConverter",
                "org.apache.flink.table.types.logical.IntType",
                "com.google.common.base.Supplier",
                "org.apache.flink.api.common.typeutils.base.array.DoublePrimitiveArraySerializer",
                "org.apache.flink.table.types.logical.RowType",
                "org.apache.flink.table.types.logical.FloatType",
                "org.apache.flink.table.api.DataTypes$Field",
                "com.google.common.hash.Striped64$Cell",
                "org.apache.flink.api.common.typeutils.base.NullValueSerializer",
                "com.twitter.chill.java.RegexSerializer",
                "org.apache.flink.api.common.InputDependencyConstraint",
                "com.google.common.collect.ImmutableList",
                "org.apache.flink.api.java.typeutils.runtime.TupleSerializer",
                "com.google.common.collect.ReverseOrdering",
                "org.apache.flink.configuration.description.InlineElement",
                "org.apache.flink.api.java.typeutils.runtime.GenericTypeComparator",
                "com.esotericsoftware.kryo.io.Input",
                "com.esotericsoftware.kryo.io.OutputChunked",
                "org.apache.flink.core.memory.DataInputView",
                "org.apache.flink.api.common.typeutils.base.BooleanValueComparator",
                "com.google.common.hash.LongAddables",
                "org.apache.flink.table.types.AbstractDataType",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$BigIntegerSerializer",
                "org.apache.flink.api.java.typeutils.TypeExtractionException",
                "org.apache.flink.table.data.TimestampData",
                "org.apache.flink.table.types.logical.BigIntType",
                "org.apache.flink.api.common.typeutils.base.SqlDateSerializer",
                "org.apache.flink.api.common.functions.GroupReduceFunction",
                "org.apache.flink.api.common.typeutils.base.IntComparator",
                "com.google.common.hash.BloomFilter",
                "org.apache.flink.api.java.typeutils.runtime.kryo.FlinkChillPackageRegistrar",
                "org.apache.flink.table.data.binary.BinaryRowData",
                "com.esotericsoftware.kryo.util.FastestStreamFactory",
                "org.apache.flink.table.data.util.DataFormatConverters$TimeConverter",
                "org.apache.flink.api.common.functions.CoGroupFunction",
                "org.apache.flink.table.types.UnresolvedDataType",
                "com.google.common.collect.Ordering",
                "org.apache.flink.table.runtime.types.DataTypePrecisionFixer",
                "com.google.common.collect.ElementTypesAreNonnullByDefault",
                "org.apache.flink.types.CharValue",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CurrencySerializer",
                "com.google.common.collect.AllEqualOrdering",
                "org.apache.flink.api.common.functions.CrossFunction",
                "org.apache.flink.types.BooleanValue",
                "org.apache.flink.api.common.typeutils.base.array.BytePrimitiveArrayComparator",
                "org.apache.flink.table.data.writer.BinaryWriter",
                "org.apache.flink.table.types.logical.StructuredType",
                "org.apache.flink.api.common.typeutils.base.array.BytePrimitiveArraySerializer",
                "org.apache.flink.core.memory.MemorySegmentWritable",
                "org.apache.flink.configuration.WritableConfig",
                "org.apache.flink.configuration.MemorySize",
                "org.apache.flink.table.data.writer.AbstractBinaryWriter$BinaryRowWriterOutputView",
                "org.hsqldb.jdbc.JDBCDriver",
                "org.apache.flink.core.io.Versioned",
                "org.apache.flink.configuration.FallbackKey",
                "org.apache.flink.api.common.typeutils.base.InstantComparator",
                "org.hsqldb.jdbc.JDBCDriver$1",
                "org.apache.flink.table.data.util.DataFormatConverters$StringConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSetSerializer",
                "org.apache.flink.table.types.logical.StructuredType$StructuredComparison",
                "org.apache.flink.api.common.typeutils.TypeSerializer",
                "com.esotericsoftware.kryo.Registration",
                "org.apache.flink.table.functions.SpecializedFunction$SpecializedContext",
                "com.google.common.collect.Range",
                "com.twitter.chill.java.SqlTimeSerializer",
                "org.apache.flink.table.functions.UserDefinedFunction",
                "org.apache.flink.api.common.typeutils.TypeComparator",
                "org.apache.flink.api.java.typeutils.runtime.NoFetchingInput",
                "org.apache.flink.table.types.logical.NullType",
                "org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo",
                "org.apache.flink.table.utils.ThreadLocalCache$1",
                "org.apache.flink.api.java.typeutils.runtime.TupleSerializerBase",
                "org.apache.flink.table.data.util.DataFormatConverters$ObjectArrayConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer",
                "com.google.common.collect.LexicographicalOrdering",
                "org.apache.flink.table.data.util.DataFormatConverters$MapDataConverter",
                "com.esotericsoftware.kryo.serializers.FieldSerializer",
                "org.apache.flink.table.functions.FunctionContext",
                "org.apache.flink.core.io.InputSplitSource",
                "com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptySetSerializer",
                "com.google.common.collect.ImmutableAsList",
                "org.apache.flink.connector.rocketmq.source.util.StringSerializer",
                "org.apache.flink.core.memory.DataInputDeserializer",
                "org.apache.flink.table.catalog.Column",
                "org.apache.flink.configuration.DelegatingConfiguration",
                "org.apache.flink.table.types.logical.DistinctType$Builder",
                "com.google.common.collect.RegularImmutableAsList",
                "com.google.common.collect.Cut$BelowValue",
                "org.apache.flink.configuration.description.ListElement",
                "com.esotericsoftware.kryo.util.IdentityMap$MapIterator",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveByteArrayConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBuilderSerializer",
                "org.apache.flink.util.InstantiationUtil$ClassLoaderObjectInputStream",
                "org.apache.flink.configuration.ReadableConfig",
                "org.apache.flink.api.common.functions.InvalidTypesException",
                "org.apache.flink.types.Either$Left",
                "com.google.common.hash.PrimitiveSink",
                "org.apache.flink.table.data.util.DataFormatConverters$BigDecimalConverter",
                "org.apache.flink.table.utils.DateTimeUtils$TimeUnit",
                "org.apache.flink.core.memory.MemorySegment",
                "org.apache.flink.core.memory.MemorySegmentFactory",
                "org.apache.flink.core.io.InputSplitAssigner",
                "com.google.common.collect.RangeGwtSerializationDependencies",
                "org.apache.flink.api.common.typeutils.base.GenericArraySerializer",
                "org.apache.flink.api.common.typeutils.base.SqlTimeSerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$StringDataConverter",
                "org.apache.flink.table.types.logical.DateType",
                "com.esotericsoftware.kryo.Generics",
                "com.google.common.collect.ImmutableList$1",
                "org.apache.flink.table.types.logical.SmallIntType",
                "com.esotericsoftware.kryo.ClassResolver",
                "org.apache.flink.table.data.util.DataFormatConverters$PojoConverter",
                "com.esotericsoftware.kryo.serializers.ObjectField",
                "org.apache.flink.types.RowKind",
                "com.google.common.primitives.ElementTypesAreNonnullByDefault",
                "com.esotericsoftware.kryo.util.ObjectMap$Values",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsEmptyMapSerializer",
                "org.apache.flink.table.types.logical.VarBinaryType",
                "com.google.common.collect.UnmodifiableIterator",
                "org.apache.flink.api.java.tuple.Tuple25",
                "org.apache.flink.runtime.memory.AbstractPagedInputView",
                "org.apache.flink.table.types.logical.UnresolvedUserDefinedType",
                "org.apache.flink.api.java.tuple.Tuple24",
                "org.apache.flink.table.functions.BuiltInFunctionDefinition",
                "org.apache.flink.table.runtime.typeutils.RowDataSerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveShortArrayConverter",
                "com.esotericsoftware.kryo.util.IntMap$MapIterator",
                "org.apache.flink.types.DoubleValue",
                "org.apache.flink.api.common.ExecutionConfig$SerializableSerializer",
                "org.apache.flink.metrics.CharacterFilter",
                "org.apache.flink.api.java.typeutils.RowTypeInfo",
                "com.esotericsoftware.kryo.Kryo",
                "org.apache.flink.table.data.util.DataFormatConverters$TimestampConverter",
                "org.apache.flink.table.data.util.DataFormatConverters$LocalDateConverter",
                "org.apache.flink.api.common.functions.MapFunction",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveDoubleArrayConverter",
                "com.twitter.chill.java.LocaleSerializer",
                "org.apache.flink.table.functions.BuiltInFunctionDefinition$Builder",
                "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer",
                "org.apache.flink.api.common.functions.AggregateFunction",
                "org.apache.flink.util.InstantiationUtil",
                "org.apache.flink.table.types.logical.BooleanType",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField",
                "org.apache.flink.api.common.typeutils.base.FloatSerializer",
                "org.apache.flink.table.types.logical.StructuredType$StructuredAttribute",
                "org.apache.flink.table.types.logical.TimeType",
                "org.apache.flink.api.java.tuple.Tuple23",
                "com.google.common.collect.SingletonImmutableList",
                "org.apache.flink.api.java.tuple.Tuple22",
                "com.esotericsoftware.kryo.util.ObjectMap$Keys",
                "org.apache.flink.api.common.typeutils.base.BooleanComparator",
                "org.apache.flink.api.java.tuple.Tuple21",
                "com.google.common.base.Converter",
                "org.apache.flink.api.java.tuple.Tuple20",
                "com.esotericsoftware.kryo.serializers.JavaSerializer",
                "org.apache.flink.api.java.tuple.Tuple16",
                "org.apache.flink.api.java.tuple.Tuple15",
                "org.apache.flink.api.java.tuple.Tuple14",
                "org.apache.flink.api.common.typeutils.base.CharSerializer",
                "org.apache.flink.api.java.functions.KeySelector",
                "com.google.common.base.Function",
                "org.apache.flink.api.java.tuple.Tuple13",
                "org.apache.flink.api.java.tuple.Tuple19",
                "org.apache.flink.api.java.tuple.Tuple18",
                "org.apache.flink.table.types.logical.DayTimeIntervalType",
                "org.apache.flink.api.java.tuple.Tuple17",
                "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer",
                "org.apache.flink.api.java.typeutils.runtime.ValueComparator",
                "org.apache.flink.table.utils.DateTimeUtils$TimeUnitRange$Pair",
                "org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo",
                "org.apache.flink.api.common.typeutils.base.CharComparator",
                "com.esotericsoftware.kryo.util.IdentityObjectIntMap",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonListSerializer",
                "org.apache.flink.table.runtime.typeutils.AbstractRowDataSerializer",
                "org.apache.flink.connector.rocketmq.source.util.ByteSerializer",
                "org.apache.flink.api.common.typeutils.base.FloatValueComparator",
                "org.apache.flink.table.types.logical.LogicalType",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$DayPrecisionExtractor",
                "org.apache.flink.connector.rocketmq.source.util.ByteSerializer$ValueType",
                "com.google.common.collect.ExplicitOrdering",
                "com.esotericsoftware.kryo.io.UnsafeOutput",
                "com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer",
                "org.apache.flink.api.common.functions.MapPartitionFunction",
                "org.apache.flink.api.common.typeutils.base.EnumSerializer",
                "org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot$OuterSchemaCompatibility",
                "org.apache.flink.api.java.tuple.Tuple12",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$NestedTypeSearcher",
                "org.apache.flink.api.java.tuple.Tuple11",
                "org.apache.flink.table.data.binary.BinaryFormat",
                "org.apache.flink.api.java.tuple.Tuple10",
                "com.google.common.collect.ImmutableList$Builder",
                "org.apache.flink.connector.rocketmq.source.util.StringSerializer$1",
                "org.apache.flink.table.data.util.DataFormatConverters$CaseClassConverter",
                "org.apache.flink.api.common.ArchivedExecutionConfig",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$LongConverter",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FractionalPrecisionExtractor",
                "org.apache.flink.api.common.typeutils.base.DoubleSerializer",
                "org.apache.flink.table.types.inference.TypeInference$Builder",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer",
                "com.google.common.collect.CompoundOrdering",
                "org.apache.flink.table.data.util.DataFormatConverters$DateConverter",
                "com.esotericsoftware.kryo.KryoException",
                "org.apache.flink.api.java.typeutils.ListTypeInfo",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$ScaleExtractor",
                "org.apache.flink.table.runtime.typeutils.RawValueDataSerializer",
                "org.apache.flink.table.types.logical.TimestampKind",
                "com.twitter.chill.java.SqlDateSerializer",
                "com.google.common.collect.Ordering$IncomparableValueException",
                "org.apache.flink.api.common.typeutils.base.LongSerializer",
                "org.apache.flink.table.types.logical.YearMonthIntervalType",
                "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray",
                "org.apache.flink.types.NullFieldException",
                "org.apache.flink.table.data.RowData",
                "com.esotericsoftware.kryo.serializers.MapSerializer",
                "com.google.common.collect.Cut$BelowAll",
                "org.apache.flink.api.common.typeutils.base.DoubleValueSerializer",
                "org.apache.flink.table.data.binary.BinaryArrayData",
                "org.apache.flink.table.functions.FunctionDefinition",
                "org.apache.flink.api.common.typeutils.CompositeType",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$LengthExtractor",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$KryoSerializableSerializer",
                "org.apache.flink.api.common.typeutils.base.array.FloatPrimitiveArraySerializer",
                "com.google.common.collect.ReverseNaturalOrdering",
                "com.google.common.primitives.Ints",
                "org.apache.flink.core.io.VersionMismatchException",
                "org.apache.flink.api.common.typeutils.UnloadableDummyTypeSerializer",
                "org.apache.flink.api.common.typeutils.base.array.ShortPrimitiveArrayComparator",
                "com.esotericsoftware.minlog.Log",
                "org.apache.flink.table.data.util.DataFormatConverters$MapConverter",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$TimestampKindExtractor",
                "com.google.common.collect.Cut$AboveAll",
                "org.apache.flink.table.data.util.DataFormatConverters$ShortConverter",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
                "org.apache.flink.api.java.typeutils.TupleTypeInfoBase",
                "org.apache.flink.table.types.DataType",
                "org.apache.flink.api.java.tuple.Tuple1",
                "org.apache.flink.table.data.util.DataFormatConverters$TimestampLtzConverter",
                "org.apache.flink.api.java.tuple.Tuple0",
                "org.apache.flink.api.java.tuple.Tuple3",
                "org.apache.flink.table.catalog.UnresolvedIdentifier",
                "org.apache.flink.api.java.tuple.Tuple2",
                "com.twitter.chill.java.UUIDSerializer",
                "org.apache.flink.api.java.tuple.Tuple5",
                "org.apache.flink.table.data.writer.BinaryArrayWriter$NullSetter",
                "org.apache.flink.api.java.tuple.Tuple4",
                "org.apache.flink.api.java.tuple.Tuple7",
                "org.apache.flink.api.java.tuple.Tuple6",
                "org.apache.flink.api.java.tuple.Tuple9",
                "org.apache.flink.api.java.typeutils.runtime.kryo.JavaSerializer",
                "org.apache.flink.api.java.tuple.Tuple8",
                "org.apache.flink.api.common.restartstrategy.RestartStrategies$FallbackRestartStrategyConfiguration",
                "org.apache.flink.api.common.functions.FlatJoinFunction",
                "org.apache.flink.table.types.logical.CharType",
                "org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo",
                "org.apache.flink.api.common.typeutils.base.ByteValueSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers",
                "org.apache.flink.table.types.inference.ArgumentCount",
                "org.apache.flink.configuration.description.TextElement",
                "org.apache.flink.table.api.DataTypes$Resolution$IntervalUnit",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeStringField",
                "org.apache.flink.table.data.util.DataFormatConverters$RawValueDataConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer",
                "org.apache.flink.api.java.typeutils.ValueTypeInfo",
                "org.apache.flink.table.types.logical.SymbolType",
                "org.apache.flink.api.common.functions.GroupCombineFunction",
                "org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot$SelfResolvingTypeSerializer",
                "org.apache.flink.table.types.logical.LocalZonedTimestampType",
                "org.apache.flink.api.common.typeutils.base.DateSerializer",
                "org.apache.flink.api.java.tuple.Tuple",
                "org.apache.flink.api.common.typeinfo.NumericTypeInfo",
                "org.apache.flink.table.runtime.typeutils.ArrayDataSerializer",
                "org.apache.flink.api.common.typeutils.base.CharValueSerializer",
                "com.google.common.base.Converter$IdentityConverter",
                "org.apache.flink.api.common.typeutils.base.LongValueComparator",
                "org.apache.flink.configuration.description.LinkElement",
                "com.google.common.collect.ByFunctionOrdering",
                "com.esotericsoftware.kryo.util.ObjectMap",
                "org.apache.flink.api.common.functions.JoinFunction",
                "org.apache.flink.api.common.functions.FlatMapFunction",
                "org.apache.flink.metrics.Meter",
                "org.apache.flink.api.java.typeutils.TypeExtractor",
                "com.google.common.base.Predicate",
                "org.apache.flink.table.data.util.DataFormatConverters$DecimalDataConverter",
                "org.apache.flink.api.common.typeutils.base.LocalTimeSerializer",
                "org.apache.flink.table.data.writer.BinaryWriter$ValueSetter",
                "com.google.common.hash.Striped64",
                "org.apache.flink.api.common.typeutils.base.ShortComparator",
                "org.apache.flink.table.utils.ThreadLocalCache",
                "org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArraySerializer",
                "com.google.common.collect.DiscreteDomain$BigIntegerDomain",
                "org.apache.flink.types.IntValue",
                "org.apache.flink.table.types.logical.DayTimeIntervalType$1",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer",
                "com.esotericsoftware.kryo.factories.SerializerFactory",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeLongField",
                "org.apache.flink.table.expressions.Expression",
                "org.apache.flink.table.data.util.DataFormatConverters$LocalTimeConverter",
                "org.apache.flink.configuration.UnmodifiableConfiguration",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField",
                "org.apache.flink.api.common.typeutils.base.array.DoublePrimitiveArrayComparator",
                "org.apache.flink.api.common.typeinfo.TypeInfo",
                "org.apache.flink.api.common.functions.Partitioner",
                "org.apache.flink.table.data.binary.BinaryStringData$SegmentAndOffset",
                "com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil",
                "org.apache.flink.util.Collector",
                "com.esotericsoftware.kryo.util.ListReferenceResolver",
                "com.google.common.collect.UnmodifiableListIterator",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$EnumSerializer",
                "org.objenesis.instantiator.ObjectInstantiator",
                "org.apache.flink.api.common.typeutils.base.NullValueComparator",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
                "org.apache.flink.configuration.description.LineBreakElement",
                "org.apache.flink.api.common.typeinfo.Types",
                "com.esotericsoftware.kryo.Serializer",
                "org.apache.flink.api.common.typeutils.base.LocalDateTimeComparator",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$DateSerializer",
                "org.apache.flink.api.common.typeutils.base.BooleanValueSerializer",
                "org.apache.flink.api.java.typeutils.GenericTypeInfo",
                "org.apache.flink.api.common.typeutils.base.DoubleValueComparator",
                "org.apache.flink.runtime.memory.AbstractPagedOutputView",
                "org.apache.flink.core.io.InputSplit",
                "org.apache.flink.table.data.DecimalData",
                "org.apache.flink.table.utils.DateTimeUtils$TimeUnitRange",
                "org.apache.flink.table.data.binary.TypedSetters",
                "org.apache.flink.types.Value",
                "org.apache.flink.table.types.DataTypeVisitor",
                "com.esotericsoftware.kryo.util.IntArray",
                "org.apache.flink.types.NullValue",
                "com.google.common.base.Preconditions",
                "org.apache.commons.lang3.exception.CloneFailedException",
                "org.apache.flink.api.java.typeutils.EnumTypeInfo",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$StringBufferSerializer",
                "org.apache.flink.table.types.logical.LogicalTypeRoot",
                "org.apache.flink.api.common.typeutils.base.ListSerializer",
                "com.esotericsoftware.kryo.util.MapReferenceResolver",
                "org.apache.flink.api.common.typeutils.base.array.LongPrimitiveArrayComparator",
                "org.apache.flink.api.java.typeutils.PojoTypeInfo",
                "com.esotericsoftware.kryo.io.UnsafeInput",
                "com.esotericsoftware.kryo.io.ByteBufferOutput",
                "org.apache.flink.api.common.typeutils.base.StringComparator",
                "org.apache.flink.table.runtime.types.DataTypePrecisionFixer$1",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils$1",
                "org.apache.flink.table.data.util.DataFormatConverters$InstantConverter",
                "org.apache.flink.api.common.typeutils.base.BigDecComparator",
                "org.apache.flink.table.types.logical.MapType",
                "org.apache.flink.types.CopyableValue",
                "org.apache.flink.table.data.writer.AbstractBinaryWriter",
                "org.apache.flink.table.data.columnar.vector.BytesColumnVector$Bytes",
                "org.apache.flink.api.common.typeinfo.BasicTypeInfo",
                "org.apache.flink.api.common.typeutils.base.IntValueComparator",
                "org.apache.flink.api.common.typeutils.base.EnumSerializer$EnumSerializerSnapshot",
                "org.apache.flink.table.types.logical.RawType",
                "org.apache.flink.api.common.typeutils.base.array.FloatPrimitiveArrayComparator",
                "org.apache.flink.api.common.typeutils.CompositeType$InvalidFieldReferenceException",
                "org.apache.flink.table.data.RowData$FieldGetter",
                "org.apache.flink.configuration.description.Description",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveFloatArrayConverter",
                "org.apache.flink.api.common.functions.Function",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$SingleFieldIntervalExtractor",
                "org.apache.flink.api.common.typeutils.base.ShortValueSerializer",
                "org.apache.flink.api.common.ExecutionConfig$MapBasedJobParameters",
                "com.google.errorprone.annotations.DoNotMock",
                "org.apache.flink.api.common.typeutils.base.BasicTypeComparator",
                "org.apache.flink.api.java.typeutils.EitherTypeInfo",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$YearPrecisionExtractor",
                "org.apache.flink.types.ShortValue",
                "org.apache.flink.api.common.typeutils.CompositeType$TypeComparatorBuilder",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$FloatConverter",
                "com.google.common.math.LongMath",
                "org.apache.flink.api.java.typeutils.runtime.kryo.ChillSerializerRegistrar",
                "org.apache.flink.util.Preconditions",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer",
                "org.apache.flink.api.common.typeutils.base.BooleanSerializer",
                "org.apache.flink.api.common.typeutils.base.LocalDateSerializer",
                "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate",
                "org.apache.flink.table.types.logical.LogicalTypeVisitor",
                "org.apache.flink.table.expressions.TypeLiteralExpression",
                "org.apache.flink.table.data.binary.NullAwareGetters",
                "org.apache.flink.table.data.ArrayData",
                "org.apache.flink.table.api.ValidationException",
                "com.google.common.collect.Cut$AboveValue",
                "org.apache.flink.table.catalog.Column$PhysicalColumn",
                "com.esotericsoftware.kryo.util.IntMap",
                "org.apache.flink.api.java.typeutils.TypeExtractionUtils$LambdaExecutable",
                "com.esotericsoftware.kryo.io.Output",
                "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
                "com.google.common.hash.LongAdder",
                "org.apache.flink.table.utils.DateTimeUtils",
                "org.apache.flink.table.expressions.CallExpression",
                "org.apache.flink.api.common.typeutils.TypeSerializerConfigSnapshot",
                "org.apache.flink.table.expressions.ExpressionVisitor",
                "org.apache.flink.api.common.typeutils.base.StringValueComparator",
                "com.google.common.hash.LongAddable",
                "org.apache.flink.api.common.typeutils.base.GenericArraySerializerSnapshot",
                "com.esotericsoftware.kryo.io.InputChunked",
                "com.esotericsoftware.kryo.KryoSerializable",
                "com.esotericsoftware.kryo.util.IdentityMap",
                "org.apache.flink.table.data.GenericRowData",
                "org.apache.flink.api.java.typeutils.runtime.kryo.MinlogForwarder",
                "org.apache.flink.table.types.logical.LogicalTypeFamily",
                "org.apache.flink.table.types.FieldsDataType",
                "org.apache.flink.configuration.description.Description$DescriptionBuilder",
                "org.apache.flink.table.data.ArrayData$ElementGetter",
                "org.apache.flink.api.java.typeutils.MapTypeInfo",
                "org.apache.flink.table.expressions.FieldReferenceExpression",
                "org.apache.flink.table.types.inference.TypeStrategy",
                "org.apache.flink.table.types.logical.MultisetType",
                "org.apache.flink.api.java.typeutils.runtime.DataOutputViewStream",
                "org.apache.flink.table.catalog.Column$ComputedColumn",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FieldCountExtractor",
                "org.apache.flink.configuration.Configuration",
                "org.apache.flink.table.api.DataTypes",
                "com.google.common.base.Converter$FunctionBasedConverter",
                "com.esotericsoftware.kryo.util.IntMap$Entry",
                "org.apache.flink.api.common.typeutils.base.BigIntSerializer",
                "org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArrayComparator",
                "com.esotericsoftware.kryo.util.IntMap$Entries",
                "org.apache.flink.table.data.RawValueData",
                "com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory",
                "com.google.common.collect.NaturalOrdering",
                "com.twitter.chill.java.ArraysAsListSerializer",
                "org.apache.flink.table.types.logical.ZonedTimestampType",
                "org.apache.flink.api.java.typeutils.runtime.TupleSerializerSnapshot",
                "com.esotericsoftware.kryo.util.ObjectMap$Entry",
                "org.apache.flink.table.data.util.DataFormatConverters$DoubleConverter",
                "com.esotericsoftware.kryo.util.UnsafeUtil",
                "com.esotericsoftware.kryo.serializers.FieldSerializer$Optional",
                "com.google.common.collect.ImmutableList$SubList",
                "org.apache.flink.util.LinkedOptionalMap",
                "org.apache.flink.table.types.logical.UserDefinedType",
                "org.apache.flink.table.catalog.ResolvedSchema",
                "org.apache.flink.api.java.typeutils.runtime.JavaEitherSerializerSnapshot",
                "org.apache.commons.lang3.ClassUtils$Interfaces",
                "org.apache.flink.api.java.typeutils.runtime.DataInputViewStream",
                "org.apache.flink.api.java.typeutils.runtime.PojoSerializer",
                "com.twitter.chill.java.TimestampSerializer",
                "com.esotericsoftware.kryo.serializers.CollectionSerializer",
                "org.apache.flink.table.types.logical.utils.LogicalTypeDuplicator",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeShortField",
                "org.apache.commons.lang3.ClassUtils",
                "com.google.common.collect.RegularImmutableList",
                "com.google.common.hash.BloomFilterStrategies$1",
                "com.google.common.hash.BloomFilterStrategies$2",
                "org.apache.flink.api.java.typeutils.runtime.kryo.PriorityQueueSerializer",
                "org.apache.flink.table.types.logical.DecimalType",
                "org.apache.flink.api.common.InvalidProgramException",
                "org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil$IntermediateCompatibilityResult",
                "org.apache.flink.table.data.binary.BinarySection",
                "org.apache.flink.table.data.util.DataFormatConverters$LongTimestampDataConverter",
                "org.apache.flink.metrics.HistogramStatistics",
                "org.apache.flink.table.data.binary.BinaryStringData",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer",
                "com.twitter.chill.java.SimpleDateFormatSerializer",
                "com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory",
                "org.apache.flink.api.java.typeutils.PojoField",
                "org.apache.flink.table.data.binary.BinaryMapData",
                "com.esotericsoftware.kryo.util.IdentityMap$Entries",
                "com.google.common.hash.Funnel",
                "com.esotericsoftware.kryo.serializers.FieldSerializer$Bind",
                "org.apache.flink.table.types.logical.DistinctType",
                "org.apache.flink.api.common.typeinfo.FractionalTypeInfo",
                "com.google.common.hash.ElementTypesAreNonnullByDefault",
                "org.apache.flink.table.data.util.DataFormatConverters",
                "org.apache.flink.api.common.typeinfo.IntegerTypeInfo",
                "org.objenesis.strategy.InstantiatorStrategy",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils$TimeAttributeRemover",
                "org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot",
                "org.apache.flink.metrics.Counter",
                "org.apache.flink.util.InstantiationUtil$FailureTolerantObjectInputStream",
                "org.apache.flink.configuration.description.DescriptionElement",
                "org.apache.flink.table.types.logical.TinyIntType",
                "org.apache.flink.table.data.binary.BinarySegmentUtils",
                "org.apache.flink.table.data.GenericArrayData",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer",
                "org.apache.flink.core.memory.DataOutputView",
                "com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeDoubleField",
                "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo",
                "org.apache.flink.metrics.Histogram",
                "org.apache.flink.api.common.typeutils.base.StringValueSerializer",
                "org.apache.flink.table.types.logical.DoubleType",
                "org.apache.flink.table.types.logical.StructuredType$Builder",
                "org.apache.flink.table.data.util.DataFormatConverters$GenericConverter",
                "org.apache.flink.core.io.VersionedIOReadableWritable",
                "com.google.common.collect.UsingToStringOrdering",
                "org.apache.flink.types.FloatValue",
                "org.apache.flink.table.data.util.DataFormatConverters$BooleanConverter",
                "org.apache.flink.configuration.ConfigOption",
                "com.esotericsoftware.kryo.ReferenceResolver",
                "com.esotericsoftware.kryo.util.IdentityMap$Entry",
                "org.apache.flink.table.types.utils.DataTypeUtils",
                "com.google.common.primitives.IntsMethodsForWeb",
                "com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeByteField",
                "org.apache.flink.table.types.logical.utils.LogicalTypeDefaultVisitor",
                "org.apache.flink.api.java.typeutils.MissingTypeInfo",
                "org.apache.flink.types.ResettableValue",
                "org.apache.flink.table.types.logical.VarCharType",
                "org.apache.flink.table.types.inference.TypeTransformation",
                "org.apache.flink.table.types.logical.RowType$RowField",
                "org.apache.flink.api.common.typeutils.base.InstantSerializer",
                "org.apache.flink.api.common.typeutils.base.ShortValueComparator",
                "org.apache.flink.table.runtime.typeutils.MapDataSerializer",
                "org.apache.flink.types.NormalizableKey",
                "org.apache.flink.api.common.typeutils.base.VoidSerializer",
                "com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory",
                "org.apache.flink.api.java.typeutils.runtime.Tuple0Serializer",
                "org.apache.flink.api.common.typeinfo.TypeInfoFactory",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeFloatField",
                "org.apache.flink.api.common.typeutils.base.BigDecSerializer",
                "com.twitter.chill.java.InetSocketAddressSerializer",
                "org.apache.flink.table.types.inference.TypeInference",
                "org.apache.flink.table.types.AtomicDataType",
                "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
                "org.apache.flink.table.data.util.DataFormatConverters$ArrayDataConverter",
                "org.apache.flink.util.LinkedOptionalMap$KeyValue",
                "org.apache.flink.api.common.typeutils.base.StringSerializer",
                "org.apache.flink.api.common.typeinfo.AtomicType",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer",
                "org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparator",
                "org.apache.flink.api.common.typeutils.base.SqlTimestampComparator",
                "org.apache.flink.api.common.typeutils.base.IntSerializer",
                "com.esotericsoftware.kryo.io.UnsafeMemoryOutput",
                "com.google.common.collect.ImmutableList$ReverseImmutableList",
                "com.twitter.chill.IKryoRegistrar",
                "org.apache.flink.table.api.DataTypes$UnresolvedField",
                "org.apache.flink.api.common.io.InputFormat",
                "com.google.common.math.ElementTypesAreNonnullByDefault",
                "org.apache.flink.api.common.typeinfo.TypeInformation",
                "org.apache.flink.table.data.binary.LazyBinaryFormat",
                "org.apache.flink.api.common.typeutils.base.LocalDateComparator",
                "org.apache.flink.configuration.DescribedEnum",
                "com.google.common.collect.ComparatorOrdering",
                "org.apache.flink.table.data.util.DataFormatConverters$RowConverter",
                "com.google.common.collect.AbstractIndexedListIterator",
                "org.apache.flink.api.common.typeutils.base.SqlTimestampSerializer",
                "org.apache.flink.table.api.DataTypes$Resolution",
                "org.apache.flink.configuration.description.TextElement$TextStyle",
                "org.apache.flink.table.data.util.DataFormatConverters$IdentityConverter",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CollectionsSingletonMapSerializer",
                "org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer",
                "com.google.common.primitives.Ints$IntConverter",
                "org.apache.flink.table.utils.TypeStringUtils",
                "org.apache.flink.table.types.logical.LegacyTypeInformationType",
                "org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializer",
                "org.apache.flink.table.types.CollectionDataType",
                "com.google.common.collect.BoundType",
                "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerDebugInitHelper",
                "org.apache.flink.configuration.JobManagerOptions$SchedulerType",
                "org.apache.flink.configuration.MemorySize$MemoryUnit",
                "org.apache.flink.api.common.typeutils.base.ByteSerializer",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField",
                "com.esotericsoftware.kryo.util.DefaultClassResolver",
                "org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArrayComparator",
                "com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry",
                "org.apache.flink.table.catalog.ObjectPath",
                "org.apache.flink.metrics.Metric",
                "org.apache.flink.api.common.typeutils.base.array.LongPrimitiveArraySerializer",
                "org.apache.flink.table.data.util.DataFormatConverters$PrimitiveBooleanArrayConverter",
                "org.apache.flink.types.Either$Right",
                "org.apache.flink.table.types.logical.YearMonthIntervalType$1",
                "com.esotericsoftware.minlog.Log$Logger",
                "org.apache.flink.api.java.typeutils.runtime.CopyableValueComparator",
                "org.apache.flink.api.common.Archiveable",
                "org.apache.flink.api.common.restartstrategy.RestartStrategies$RestartStrategyConfiguration",
                "com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil",
                "org.apache.flink.types.LongValue",
                "org.apache.flink.api.common.io.statistics.BaseStatistics",
                "org.apache.flink.table.types.logical.DayTimeIntervalType$DayTimeResolution",
                "com.twitter.chill.java.URISerializer",
                "org.apache.flink.table.expressions.ValueLiteralExpression",
                "org.apache.flink.table.data.writer.BinaryArrayWriter",
                "org.apache.flink.table.data.StringData",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer$SingleThreadAccessCheck",
                "org.apache.flink.types.StringValue",
                "org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters",
                "org.apache.flink.api.java.typeutils.TypeExtractionUtils",
                "org.apache.flink.api.common.typeutils.base.MapSerializer",
                "org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer$SingleThreadAccessChecker",
                "com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl",
                "com.esotericsoftware.kryo.util.IntMap$Keys");
    }

    private static void resetClasses() {
        org.evosuite.runtime.classhandling.ClassResetter.getInstance()
                .setClassLoader(StringSerializer_ESTest_scaffolding.class.getClassLoader());

        org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
                "org.apache.flink.table.data.util.DataFormatConverters$DataFormatConverter",
                "org.apache.flink.table.data.util.DataFormatConverters$TimestampConverter",
                "org.apache.flink.connector.rocketmq.source.util.StringSerializer",
                "org.apache.flink.connector.rocketmq.source.util.ByteSerializer$ValueType",
                "org.apache.flink.connector.rocketmq.source.util.StringSerializer$1",
                "org.apache.flink.core.memory.MemoryUtils",
                "org.apache.flink.table.data.binary.BinarySegmentUtils",
                "org.apache.flink.table.data.util.DataFormatConverters$DateConverter",
                "org.apache.flink.table.data.util.DataFormatConverters$TimeConverter",
                "org.apache.flink.table.data.DecimalData",
                "org.apache.flink.table.types.logical.LogicalType",
                "org.apache.flink.table.types.logical.LocalZonedTimestampType",
                "org.apache.flink.util.Preconditions",
                "org.apache.flink.table.types.DataType",
                "org.apache.flink.table.types.AtomicDataType",
                "org.apache.flink.table.api.ValidationException",
                "org.apache.flink.table.types.logical.SymbolType",
                "org.apache.flink.table.runtime.types.DataTypePrecisionFixer",
                "org.apache.flink.table.types.FieldsDataType",
                "org.apache.flink.table.types.CollectionDataType",
                "org.apache.flink.table.types.logical.DecimalType",
                "org.apache.flink.table.types.logical.TimestampType",
                "org.apache.flink.table.types.logical.VarBinaryType",
                "org.apache.flink.api.common.typeinfo.TypeInformation",
                "org.apache.flink.api.common.typeutils.TypeSerializer",
                "org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton",
                "org.apache.flink.api.common.typeutils.base.StringSerializer",
                "org.apache.flink.api.common.typeutils.base.BooleanSerializer",
                "org.apache.flink.api.common.typeinfo.NumericTypeInfo",
                "org.apache.flink.api.common.typeinfo.IntegerTypeInfo",
                "org.apache.flink.api.common.typeutils.base.ByteSerializer",
                "org.apache.flink.api.common.typeutils.base.ShortSerializer",
                "org.apache.flink.api.common.typeutils.base.IntSerializer",
                "org.apache.flink.api.common.typeutils.base.LongSerializer",
                "org.apache.flink.api.common.typeinfo.FractionalTypeInfo",
                "org.apache.flink.api.common.typeutils.base.FloatSerializer",
                "org.apache.flink.api.common.typeutils.base.DoubleSerializer",
                "org.apache.flink.api.common.typeutils.base.CharSerializer",
                "org.apache.flink.api.common.typeutils.base.DateSerializer",
                "org.apache.flink.api.common.typeutils.base.VoidSerializer",
                "org.apache.flink.api.common.typeutils.base.BigIntSerializer",
                "org.apache.flink.api.common.typeutils.base.BigDecSerializer",
                "org.apache.flink.api.common.typeutils.base.InstantSerializer",
                "org.apache.flink.api.common.typeinfo.BasicTypeInfo",
                "org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo",
                "org.apache.flink.api.common.InvalidProgramException",
                "org.apache.flink.api.common.functions.InvalidTypesException",
                "org.apache.flink.table.types.logical.RowType",
                "org.apache.flink.table.types.KeyValueDataType",
                "org.apache.flink.table.types.logical.BinaryType",
                "org.apache.flink.table.types.logical.BigIntType",
                "org.apache.flink.table.types.logical.CharType",
                "org.apache.flink.table.types.logical.TimeType",
                "org.apache.flink.table.types.logical.IntType",
                "org.apache.flink.table.types.logical.DateType",
                "org.apache.flink.table.types.logical.NullType",
                "org.apache.flink.table.types.logical.DayTimeIntervalType",
                "org.apache.flink.table.types.logical.DayTimeIntervalType$1",
                "org.apache.flink.table.types.logical.ZonedTimestampType",
                "org.apache.flink.table.types.logical.VarCharType",
                "org.apache.flink.table.types.logical.FloatType",
                "org.apache.flink.table.types.logical.BooleanType",
                "org.apache.flink.table.types.logical.DoubleType",
                "org.apache.flink.table.types.logical.RawType",
                "org.apache.flink.table.types.logical.YearMonthIntervalType",
                "org.apache.flink.table.runtime.types.DataTypePrecisionFixer$1",
                "org.apache.flink.api.common.typeutils.UnloadableDummyTypeSerializer",
                "org.apache.flink.table.types.logical.SmallIntType",
                "org.apache.flink.table.types.logical.utils.LogicalTypeDefaultVisitor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeDuplicator",
                "org.apache.flink.table.types.logical.ArrayType",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$Extractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$TimestampKindExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$LengthExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$PrecisionExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$ScaleExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$YearPrecisionExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$DayPrecisionExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FractionalPrecisionExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$SingleFieldIntervalExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FieldCountExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks$FieldNamesExtractor",
                "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
                "org.apache.flink.api.common.ExecutionConfig$GlobalJobParameters",
                "org.apache.flink.configuration.Configuration",
                "org.apache.flink.configuration.DelegatingConfiguration",
                "org.apache.flink.table.types.logical.RowType$RowField",
                "org.apache.flink.table.types.logical.UserDefinedType",
                "org.apache.flink.table.types.logical.StructuredType",
                "org.apache.flink.table.api.TableException",
                "org.apache.flink.api.common.typeinfo.TypeHint",
                "org.apache.flink.table.types.logical.LegacyTypeInformationType",
                "org.apache.flink.table.types.logical.MapType",
                "org.apache.flink.table.types.utils.DataTypeUtils",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils$TimeAttributeRemover",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
                "org.apache.flink.table.types.logical.utils.LogicalTypeUtils$1",
                "com.esotericsoftware.kryo.Serializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer",
                "org.apache.flink.table.types.logical.YearMonthIntervalType$1",
                "org.apache.flink.table.types.logical.TinyIntType",
                "org.hsqldb.jdbc.JDBCDriver",
                "org.apache.flink.api.common.typeutils.base.SqlDateSerializer",
                "org.apache.flink.api.common.typeutils.base.SqlTimeSerializer",
                "org.apache.flink.api.common.typeutils.base.SqlTimestampSerializer",
                "org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo",
                "org.apache.flink.configuration.description.Description",
                "org.apache.flink.configuration.description.Description$DescriptionBuilder",
                "org.apache.flink.configuration.description.TextElement",
                "org.apache.flink.configuration.description.TextElement$TextStyle",
                "org.apache.flink.configuration.ConfigOption",
                "org.apache.flink.util.StringUtils",
                "org.apache.flink.table.catalog.UnresolvedIdentifier",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer$SingleThreadAccessChecker",
                "org.apache.flink.table.types.logical.MultisetType",
                "com.esotericsoftware.kryo.io.Input",
                "com.esotericsoftware.kryo.KryoException",
                "com.esotericsoftware.kryo.util.MapReferenceResolver",
                "com.esotericsoftware.kryo.util.IdentityObjectIntMap",
                "com.esotericsoftware.kryo.util.ObjectMap",
                "com.esotericsoftware.kryo.util.Util",
                "com.esotericsoftware.kryo.util.UnsafeUtil",
                "com.esotericsoftware.kryo.util.FastestStreamFactory",
                "com.esotericsoftware.kryo.Kryo",
                "com.esotericsoftware.kryo.factories.ReflectionSerializerFactory",
                "com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy",
                "com.esotericsoftware.kryo.util.IntArray",
                "org.apache.flink.table.data.binary.LazyBinaryFormat",
                "org.apache.flink.table.data.binary.StringUtf8Utils",
                "org.apache.flink.core.memory.MemorySegmentFactory",
                "org.apache.flink.core.memory.MemorySegment",
                "org.apache.flink.table.data.binary.BinarySection",
                "org.apache.flink.table.data.binary.BinaryStringData",
                "org.apache.flink.table.catalog.ObjectIdentifier",
                "org.apache.flink.table.types.logical.UnresolvedUserDefinedType",
                "com.esotericsoftware.kryo.util.DefaultClassResolver",
                "com.esotericsoftware.kryo.util.IntMap",
                "com.esotericsoftware.kryo.util.DefaultStreamFactory",
                "com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer",
                "com.esotericsoftware.kryo.Registration",
                "com.esotericsoftware.minlog.Log$Logger",
                "com.esotericsoftware.minlog.Log",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$VoidSerializer",
                "org.apache.flink.configuration.UnmodifiableConfiguration",
                "com.google.common.hash.BloomFilter",
                "com.google.common.hash.BloomFilterStrategies",
                "com.google.common.base.Preconditions",
                "com.google.common.base.Strings",
                "org.apache.flink.configuration.ConfigurationUtils",
                "org.apache.flink.table.api.DataTypes",
                "com.esotericsoftware.kryo.serializers.FieldSerializer",
                "com.esotericsoftware.kryo.serializers.CompatibleFieldSerializer",
                "com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil",
                "com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil$Factory",
                "com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtilImpl",
                "com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil",
                "com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory",
                "com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeCachedField",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeIntField",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeBooleanField",
                "com.esotericsoftware.kryo.serializers.ObjectField",
                "com.esotericsoftware.kryo.serializers.UnsafeCacheFields$UnsafeObjectField",
                "com.esotericsoftware.kryo.util.ListReferenceResolver",
                "com.esotericsoftware.kryo.serializers.MapSerializer",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$TreeMapSerializer",
                "com.esotericsoftware.kryo.io.UnsafeInput",
                "org.apache.flink.table.data.TimestampData",
                "org.apache.flink.api.java.typeutils.TypeExtractor",
                "org.apache.flink.api.java.typeutils.TypeExtractionUtils",
                "org.apache.commons.lang3.ClassUtils",
                "org.apache.flink.api.java.typeutils.GenericTypeInfo",
                "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer$SingleThreadAccessCheck",
                "org.apache.flink.table.types.logical.DistinctType",
                "org.apache.flink.table.utils.ThreadLocalCache",
                "org.apache.flink.table.utils.ThreadLocalCache$1",
                "org.apache.flink.table.utils.DateTimeUtils",
                "com.esotericsoftware.kryo.io.Output",
                "org.apache.flink.core.memory.DataInputDeserializer",
                "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray",
                "com.google.common.math.LongMath",
                "com.google.common.math.LongMath$1",
                "com.google.common.primitives.IntsMethodsForWeb",
                "com.google.common.primitives.Ints",
                "com.esotericsoftware.kryo.serializers.DefaultSerializers$LocaleSerializer",
                "com.google.common.base.Converter",
                "com.google.common.base.Converter$FunctionBasedConverter",
                "com.google.common.base.Converter$IdentityConverter",
                "com.google.common.base.Converter$ConverterComposition",
                "com.esotericsoftware.kryo.Generics",
                "com.google.common.hash.Striped64$1",
                "com.google.common.hash.Striped64",
                "com.google.common.hash.LongAdder",
                "com.google.common.hash.LongAddables$1",
                "com.google.common.hash.LongAddables",
                "org.apache.flink.table.utils.TypeStringUtils",
                "org.apache.flink.api.common.typeutils.base.LocalDateSerializer",
                "org.apache.flink.api.common.typeutils.base.LocalTimeSerializer",
                "org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer",
                "org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo",
                "org.apache.flink.api.common.typeinfo.Types",
                "org.apache.flink.table.utils.EncodingUtils",
                "org.apache.flink.api.common.typeutils.base.array.BooleanPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.BytePrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.ShortPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.IntPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.LongPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.FloatPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.DoublePrimitiveArraySerializer",
                "org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializer",
                "org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo",
                "org.apache.flink.table.data.GenericRowData",
                "com.google.common.collect.RangeGwtSerializationDependencies",
                "com.google.common.collect.Cut",
                "com.google.common.collect.Cut$BelowAll",
                "com.google.common.collect.Cut$AboveAll",
                "com.google.common.collect.Range",
                "com.google.common.collect.Cut$AboveValue",
                "org.apache.flink.api.java.typeutils.EnumTypeInfo",
                "org.apache.flink.util.InstantiationUtil",
                "org.apache.flink.table.types.logical.LogicalTypeFamily",
                "org.apache.flink.table.types.logical.LogicalTypeRoot",
                "org.apache.flink.table.types.logical.TimestampKind");
    }
}
