/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 11:48:09 GMT 2025
 */

package org.apache.flink.connector.rocketmq.sink.committer;

import org.apache.flink.api.connector.sink2.Committer;
import org.apache.flink.configuration.Configuration;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Collection;

import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class RocketMQCommitter_ESTest extends RocketMQCommitter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
        RocketMQCommitter rocketMQCommitter0 = new RocketMQCommitter(configuration0);
        rocketMQCommitter0.commit((Collection<Committer.CommitRequest<SendCommittable>>) null);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
        RocketMQCommitter rocketMQCommitter0 = new RocketMQCommitter(configuration0);
        rocketMQCommitter0.close();
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        Configuration configuration0 = mock(Configuration.class, new ViolatedAssumptionAnswer());
        RocketMQCommitter rocketMQCommitter0 = new RocketMQCommitter(configuration0);
        RocketMQCommitter rocketMQCommitter1 = rocketMQCommitter0.clone();
        assertNotSame(rocketMQCommitter0, rocketMQCommitter1);
    }
}
