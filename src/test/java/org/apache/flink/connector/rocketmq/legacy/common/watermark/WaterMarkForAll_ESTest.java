/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:33:53 GMT 2025
 */

package org.apache.flink.connector.rocketmq.legacy.common.watermark;

import org.apache.flink.streaming.api.watermark.Watermark;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class WaterMarkForAll_ESTest extends WaterMarkForAll_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        WaterMarkForAll waterMarkForAll0 = new WaterMarkForAll(0L);
        Watermark watermark0 = waterMarkForAll0.getCurrentWatermark();
        assertEquals(0L, watermark0.getTimestamp());
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        WaterMarkForAll waterMarkForAll0 = new WaterMarkForAll((-1326L));
        Watermark watermark0 = waterMarkForAll0.getCurrentWatermark();
        assertEquals(1326L, watermark0.getTimestamp());
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        WaterMarkForAll waterMarkForAll0 = new WaterMarkForAll();
        Watermark watermark0 = waterMarkForAll0.getCurrentWatermark();
        assertEquals((-5000L), watermark0.getTimestamp());
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        WaterMarkForAll waterMarkForAll0 = new WaterMarkForAll(23L);
        waterMarkForAll0.extractTimestamp(23L);
    }
}
