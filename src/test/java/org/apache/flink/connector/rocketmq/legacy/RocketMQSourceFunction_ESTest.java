/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 10:40:44 GMT 2025
 */

package org.apache.flink.connector.rocketmq.legacy;

import org.apache.flink.connector.rocketmq.legacy.common.serialization.KeyValueDeserializationSchema;
import org.apache.flink.runtime.state.FunctionInitializationContext;
import org.apache.flink.streaming.api.functions.source.SourceFunction;

import org.apache.rocketmq.common.message.MessageQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.sql.SQLClientInfoException;
import java.sql.SQLRecoverableException;
import java.util.Properties;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class RocketMQSourceFunction_ESTest extends RocketMQSourceFunction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        KeyValueDeserializationSchema<SQLRecoverableException> keyValueDeserializationSchema0 =
                (KeyValueDeserializationSchema<SQLRecoverableException>)
                        mock(KeyValueDeserializationSchema.class, new ViolatedAssumptionAnswer());
        Properties properties0 = new Properties();
        RocketMQSourceFunction<SQLRecoverableException> rocketMQSourceFunction0 =
                new RocketMQSourceFunction<SQLRecoverableException>(
                        keyValueDeserializationSchema0, properties0);
        SourceFunction.SourceContext<SQLClientInfoException> sourceFunction_SourceContext0 =
                (SourceFunction.SourceContext<SQLClientInfoException>)
                        mock(SourceFunction.SourceContext.class, new ViolatedAssumptionAnswer());
        try {
            rocketMQSourceFunction0.run(sourceFunction_SourceContext0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.legacy.RocketMQSourceFunction", e);
        }
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        Properties properties0 = new Properties();
        KeyValueDeserializationSchema<Object> keyValueDeserializationSchema0 =
                (KeyValueDeserializationSchema<Object>)
                        mock(KeyValueDeserializationSchema.class, new ViolatedAssumptionAnswer());
        RocketMQSourceFunction<Object> rocketMQSourceFunction0 =
                new RocketMQSourceFunction<Object>(keyValueDeserializationSchema0, properties0);
        try {
            rocketMQSourceFunction0.initializeState((FunctionInitializationContext) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.legacy.RocketMQSourceFunction", e);
        }
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        KeyValueDeserializationSchema<MessageQueue> keyValueDeserializationSchema0 =
                (KeyValueDeserializationSchema<MessageQueue>)
                        mock(KeyValueDeserializationSchema.class, new ViolatedAssumptionAnswer());
        Properties properties0 = new Properties();
        RocketMQSourceFunction<MessageQueue> rocketMQSourceFunction0 =
                new RocketMQSourceFunction<MessageQueue>(
                        keyValueDeserializationSchema0, properties0);
        try {
            rocketMQSourceFunction0.close();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.flink.connector.rocketmq.legacy.RocketMQSourceFunction", e);
        }
    }
}
