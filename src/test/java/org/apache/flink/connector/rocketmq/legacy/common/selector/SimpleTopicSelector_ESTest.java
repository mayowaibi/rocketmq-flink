/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 11:38:59 GMT 2025
 */

package org.apache.flink.connector.rocketmq.legacy.common.selector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.HashMap;
import java.util.Map;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class SimpleTopicSelector_ESTest extends SimpleTopicSelector_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 = new SimpleTopicSelector("", "", "", "");
        HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
        String string0 = simpleTopicSelector0.getTopic((Map) hashMap0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector((String) null, (String) null, (String) null, (String) null);
        HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
        String string0 = simpleTopicSelector0.getTag((Map) hashMap0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector((String) null, (String) null, (String) null, (String) null);
        // Undeclared exception!
        try {
            simpleTopicSelector0.getTag((Map) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector("", (String) null, "", "");
        HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>(0);
        hashMap0.put("", (Object) null);
        String string0 = simpleTopicSelector0.getTag((Map) hashMap0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector(
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain");
        HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
        hashMap0.put(
                "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                "com.google.comon.collect.DiscreteDomain$IntgerDomain");
        String string0 = simpleTopicSelector0.getTag((Map) hashMap0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector(
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                        "com.google.comon.collect.DiscreteDomain$IntgerDomain");
        HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
        hashMap0.put(
                "com.google.comon.collect.DiscreteDomain$IntgerDomain",
                "com.google.comon.collect.DiscreteDomain$IntgerDomain");
        String string0 = simpleTopicSelector0.getTopic((Map) hashMap0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 =
                new SimpleTopicSelector((String) null, (String) null, (String) null, (String) null);
        HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
        hashMap0.put((String) null, (Object) null);
        String string0 = simpleTopicSelector0.getTopic((Map) hashMap0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test7() throws Throwable {
        SimpleTopicSelector simpleTopicSelector0 = new SimpleTopicSelector("", "", "", "");
        // Undeclared exception!
        try {
            simpleTopicSelector0.getTopic((Map) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }
}
