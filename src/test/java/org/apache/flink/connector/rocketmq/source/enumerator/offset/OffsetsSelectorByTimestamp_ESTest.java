/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 12:29:03 GMT 2025
 */

package org.apache.flink.connector.rocketmq.source.enumerator.offset;

import org.apache.flink.connector.rocketmq.legacy.common.config.OffsetResetStrategy;

import org.apache.rocketmq.common.message.MessageQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Collection;
import java.util.Map;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
        mockJVMNonDeterminism = true,
        useVFS = true,
        useVNET = true,
        resetStaticState = true,
        separateClassLoader = true,
        useJEE = true)
public class OffsetsSelectorByTimestamp_ESTest
        extends OffsetsSelectorByTimestamp_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        OffsetsSelectorByTimestamp offsetsSelectorByTimestamp0 = new OffsetsSelectorByTimestamp(0L);
        OffsetResetStrategy offsetResetStrategy0 =
                offsetsSelectorByTimestamp0.getAutoOffsetResetStrategy();
        assertEquals(OffsetResetStrategy.LATEST, offsetResetStrategy0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        OffsetsSelectorByTimestamp offsetsSelectorByTimestamp0 = new OffsetsSelectorByTimestamp(0L);
        OffsetsSelector.MessageQueueOffsetsRetriever offsetsSelector_MessageQueueOffsetsRetriever0 =
                mock(
                        OffsetsSelector.MessageQueueOffsetsRetriever.class,
                        new ViolatedAssumptionAnswer());
        doReturn((Map) null)
                .when(offsetsSelector_MessageQueueOffsetsRetriever0)
                .maxOffsets(anyCollection());
        // Undeclared exception!
        try {
            offsetsSelectorByTimestamp0.getMessageQueueOffsets(
                    (Collection<MessageQueue>) null, offsetsSelector_MessageQueueOffsetsRetriever0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException(
                    "org.apache.flink.connector.rocketmq.source.enumerator.offset.OffsetsSelectorByTimestamp",
                    e);
        }
    }
}
